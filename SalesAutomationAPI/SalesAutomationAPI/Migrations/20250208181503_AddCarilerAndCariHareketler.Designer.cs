// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesAutomationAPI.Data;

#nullable disable

namespace SalesAutomationAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250208181503_AddCarilerAndCariHareketler")]
    partial class AddCarilerAndCariHareketler
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalesAutomationAPI.Models.CariHareketler", b =>
                {
                    b.Property<int>("HareketID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HareketID"));

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("BelgeNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CariID")
                        .HasColumnType("int");

                    b.Property<DateTime>("IslemTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("IslemTuru")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Tutar")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("VadeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("HareketID");

                    b.HasIndex("CariID");

                    b.ToTable("CariHareketler");
                });

            modelBuilder.Entity("SalesAutomationAPI.Models.Cariler", b =>
                {
                    b.Property<int>("CariID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CariID"));

                    b.Property<string>("Adres")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Bakiye")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Unvan")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("VergiDairesi")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VergiNo")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CariID");

                    b.ToTable("Cariler");
                });

            modelBuilder.Entity("SalesAutomationAPI.Models.Kategoriler", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriID"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("KategoriID");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("SalesAutomationAPI.Models.SatisDetaylari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<int>("SatisId")
                        .HasColumnType("int");

                    b.Property<decimal>("ToplamFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UrunId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SatisId");

                    b.HasIndex("UrunId");

                    b.ToTable("SatisDetaylari");
                });

            modelBuilder.Entity("SalesAutomationAPI.Models.Satislar", b =>
                {
                    b.Property<int>("SatisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SatisID"));

                    b.Property<string>("Musteri")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("SatisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ToplamTutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SatisID");

                    b.ToTable("Satislar");
                });

            modelBuilder.Entity("SalesAutomationAPI.Models.Urunler", b =>
                {
                    b.Property<int>("UrunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunID"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KategoriID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OlusturulmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ozellikler")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StokMiktari")
                        .HasColumnType("int");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UrunGorseli")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UrunID");

                    b.HasIndex("KategoriID");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("SalesAutomationAPI.Models.CariHareketler", b =>
                {
                    b.HasOne("SalesAutomationAPI.Models.Cariler", "Cari")
                        .WithMany("CariHareketler")
                        .HasForeignKey("CariID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cari");
                });

            modelBuilder.Entity("SalesAutomationAPI.Models.SatisDetaylari", b =>
                {
                    b.HasOne("SalesAutomationAPI.Models.Satislar", "Satis")
                        .WithMany("SatisDetaylari")
                        .HasForeignKey("SatisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalesAutomationAPI.Models.Urunler", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Satis");

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("SalesAutomationAPI.Models.Urunler", b =>
                {
                    b.HasOne("SalesAutomationAPI.Models.Kategoriler", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("SalesAutomationAPI.Models.Cariler", b =>
                {
                    b.Navigation("CariHareketler");
                });

            modelBuilder.Entity("SalesAutomationAPI.Models.Kategoriler", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("SalesAutomationAPI.Models.Satislar", b =>
                {
                    b.Navigation("SatisDetaylari");
                });
#pragma warning restore 612, 618
        }
    }
}
